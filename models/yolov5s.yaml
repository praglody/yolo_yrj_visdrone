# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 10  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  # 3,4, 4,8, 6,6, 7,12, 12,8, 11,16, 21,11, 17,23, 35,18, 27,39, 52,30, 67,61
  - [3,4, 4,8, 6,6]  # P3/8
  - [7,12, 12,8, 11,16]  # P4/16
  - [21,11, 17,23, 35,18]  # P4/16
  - [27,39, 52,30, 67,61]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [ [ -1, 1, Conv, [ 64, 6, 2, 2 ] ], # 0-P1/2  # input: [3,640,640], output: [64,320,320]
    [ -1, 1, Conv, [ 128, 3, 2 ] ],   # 1-P2/4  # input: [64,320,320], output: [128,160,160]
    [ -1, 3, C3, [ 128 ] ],                     # input: [128,160,160], output: [128,160,160]
    [ -1, 1, scSE, [128] ],
    [ -1, 1, Conv, [ 256, 3, 2 ] ],   # 3-P3/8  # input: [128,160,160], output: [256,80,80]
    [ -1, 6, C3, [ 256 ] ],                     # input: [256,80,80], output: [256,80,80]
    [ -1, 1, scSE, [256] ],
    [ -1, 1, Conv, [ 512, 3, 2 ] ],   # 5-P4/16 # input: [256,80,80], output: [512,40,40]
    [ -1, 9, C3, [ 512 ] ],                     # input: [512,40,40], output: [512,40,40]
    [ -1, 1, Conv, [ 1024, 3, 2 ] ],  # 7-P5/32 # input: [512,40,40], output: [1024,20,20]
    [ -1, 3, C3, [ 1024 ] ],                    # input: [1024,20,20], output: [1024,20,20]
    [ -1, 1, SPPF, [ 1024, 5 ] ],     # 9
  ]

# YOLOv5 v6.0 head
head:
  [ [ -1, 1, Conv, [ 512, 1, 1 ] ],   # 10        # input: [1024,20,20], output: [512,20,20]
    [ -1, 1, nn.Upsample, [None, 2, 'nearest']],  #
    [ [ -1, 8 ], 1, Concat, [ 1 ] ],              #                                          [# cat backbone P4]
    [ -1, 3, C3, [ 512, False ] ],    # 13        # input: [1024,40,40], output: [512,40,40]

    [ -1, 1, Conv, [ 256, 1, 1 ] ],   # 14        # input: [512,40,40], output: [256,40,40]
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest']],
    [ [ -1, 5 ], 1, Concat, [ 1 ] ],              #                                          [# cat backbone P3]
    [ -1, 3, C3, [ 256, False ] ],    # 17        # input: [512,80,80], output: [256,80,80]  [# 17 (P3/8-small)]

    # new layer
    [ -1, 1, Conv, [ 128, 1, 1 ] ],   # 18        # input: [256,80,80], output: [128,80,80]
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],
    [ [ -1, 3 ], 1, Concat, [ 1 ] ],              # input: [128,160,160], output: [256,160,160]  [# cat backbone ]
    [ -1, 3, C3, [ 128, False ] ],    # 21        # input: [256,160,160], output: [128,160,160]  [# (very small)]

    [ -1, 1, Conv, [ 128, 3, 2 ] ],   # 22        # input: [128,160,160], output: [128,80,80]
    [ [ -1, 20 ], 1, Concat, [ 1 ] ],             # input: [128,80,80], output: [256,80,80]  [# cat head P4]
    [ -1, 3, C3, [ 256, False ] ],    # 24        # input: [256,80,80], output: [256,80,80]  [# 20 (small)]
    # new layer end

    [ -1, 1, Conv, [ 256, 3, 2 ] ],   # 25        # input: [256,80,80], output: [256,40,40]
    [ [ -1, 16 ], 1, Concat, [ 1 ] ],             # input: [256,40,40], output: [512,40,40]  [# cat head P4]
    [ -1, 3, C3, [ 512, False ] ],    # 27        # input: [512,40,40], output: [512,40,40]  [# 20 (P4/16-medium)]

    [ -1, 1, Conv, [ 512, 3, 2 ] ],   # 28        # input: [512,40,40], output: [512,20,20]
    [ [ -1, 12 ], 1, Concat, [ 1 ] ],             #                                          [# cat head P5]
    [ -1, 3, C3, [ 1024, False ] ],   # 30        # input: [1024,20,20],output: [1024,20,20] [# 23 (P5/32-large)]

    [ [ 23, 26, 29, 32 ], 1, Detect, [ nc, anchors ] ],  # Detect(P3, P4, P5)
  ]
