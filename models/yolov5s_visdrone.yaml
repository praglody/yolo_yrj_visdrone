# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 10  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [3,4, 4,9, 8,6]  # P3/8
  - [7,14, 15,9, 15,19]  # P4/16
  - [31,17, 25,37, 55,42]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args] in：[4, 3, 640, 640]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2   3 => 64       [4, 64, 320, 320]
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4     64 => 128     [4, 128, 160, 160]
   [-1, 6, C3, [128]],                     #            128 => 128    [4, 128, 160, 160]
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8     128 => 256    [4, 256, 80, 80]
   [-1, 6, C3, [256]],                     #            256 => 256    [4, 256, 80, 80]
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16    256 => 512    [4, 512, 40, 40]
   [-1, 9, C3, [512]],                     #            512 => 512    [4, 512, 40, 40]
#   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32   512 => 1024   [4, 1024, 20, 20]
#   [-1, 3, C3, [1024]],                    #            1024 => 1024  [4, 1024, 20, 20]
   [-1, 1, SPPF, [512, 5]],  # 9                       1024 => 1024   「512 => 512」
  ]

# YOLOv5 v6.0 head
head:
  [
#in: [4, 512, 40, 40]
# 上采样 512, 40, 40 => 256, 80, 80
    # 8
    [-1, 1, Conv, [256, 1, 1]], #         input: [512,40,40], output: [256,40,40]
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
    [[-1, 4], 1, Concat, [1]],  # cat backbone P4
    [-1, 3, C3, [256, False]],  # 13                 input: [512,80,80], output: [256,80,80]

# 上采样 256, 80, 80 => 128, 160, 160
    # 12
    [-1, 1, Conv, [128, 1, 1]], #         # input: [256,80,80], output: [128,80,80]
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
    [[-1, 2], 1, Concat, [1]],  # cat backbone P3
    [-1, 3, C3TR, [128, False]],  # 17 (P3/8-small)    # input: [256,160,160], output: [128,160,160]

    # 16
    [-1, 1, Conv, [128, 3, 2]], #         # input: [128,160,160], output: [128,80,80]
    [4, 1, Conv, [128, 1, 1]],            # convert [256,80,80] to [128,80,80]
    [[-1, 16], 1, Concat, [1]],  # cat head P4
    [-1, 3, C3, [256, False]],  # 20 (P4/16-medium)  # input: [256,80,80], output: [256,80,80]

    # 20
    [-1, 1, Conv, [256, 3, 2]], #         # input: [256,80,80], output: [256,40,40]
    [7, 1, Conv, [256, 1, 1]],            # convert [512,40,40] to [256,40,40]
    [[-1, 20], 1, Concat, [1]],  # cat head P5
    [-1, 3, C3, [512, False]],  # 23 (P5/32-large)   #input: [512,40,40], output: [512,40,40]


   [[15, 19, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
